Longest Substring without repeating characters

Given a string s, find the length of the longest
substring
without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.

Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.

 
 Reflection

    : the main gist of the problem is using sliding window technique to perform the OPs in O(n)
        : initialize a LEFT and RIGHT pointer
        : initialize a set to keep track of the elements in the window and avoid duplicates
        : loop through the given substring 
            : while the current index ( aka right most elt ) is already in the set , 
                : remove 
                : increment the left pointer one step at a time 
            : then  , add the element to the set 
            : and compute the max substring by taking max of the previous and ( r - l + 1 )
        return result

# takeaway : while using sliding window technique , the left and right edges shrink and expand to fit elements in the window size 
    and we track the window size along with it 
