Longest Repeating Character Replacement

You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.

Return the length of the longest substring containing the same letter you can get after performing the above operations.

 

Example 1:

Input: s = "ABAB", k = 2
Output: 4
Explanation: Replace the two 'A's with two 'B's or vice versa.

Example 2:

Input: s = "AABABBA", k = 1
Output: 4
Explanation: Replace the one 'A' in the middle with 'B' and form "AABBBBA".
The substring "BBBB" has the longest repeating letters, which is 4.
There may exists other ways to achive this answer too.




Reflection
    : the problem can be solved with sliding window technique and using hashmap 


    # expand the window until the amount of element to be repleaced in the window is greater than k
        : to check that , ( size of window - max count among the elements stored ) > K ?
            decrement the count of the left most element
            : shrink the window ( move the left pointer )
    
    # update the maximum window size, res = max(res, r-l+1)
return result 

